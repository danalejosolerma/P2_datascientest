# -*- coding: utf-8 -*-
"""Masterclass 5 - API Pr√©diction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XQFNb-8KNd0JMyUkxj15YWBRTRrPXXkI

### **Installation librairie fastapi**
"""

pip install fastapi

from pickle import FLOAT
from fastapi import FastAPI
from pydantic import BaseModel
import pandas as pd
import joblib
import json


class WineMeasurementData(BaseModel):
  alcohol : float
  flavanoids : float
  proline : float
  color_intensity : float
  hue : float

class WineTypePredictionProba(BaseModel):
  class_0 : float
  class_1 : float
  class_2 : float
  
class WineTypePredictionResponse(BaseModel):
  predicted_class : int
  proba : WineTypePredictionProba 


api = FastAPI(title='Wine measurement API')

with open('features.json', 'r') as f :
    features = json.load(f)

classifier = joblib.load('classifier.joblib')


@api.get("/status", tags=['general'])
def status() :
  return 1

@api.get("/features")
def get_features() :
  return get_features

@api.get("/hello")
def hello(name : str) :
  return "Hello {name}"

@api.post("/prediction", tags = ['prediction'], response_model=WineTypePredictionResponse)
def make_prediction(data : WineMeasurementData) :

  data = pd.DataFrame([data.dict()])
  data = data[features]
  predicted_class = classifier.predict(data)[0]
  predicted_proba = classifier.predict_proba(data)[0].to_list()

  return {
      'predicted_class' : int(predicted_class),
      'proba' : {
          'class_0' : predicted_proba[0],
          'class_1' : predicted_proba[1],
          'class_2' : predicted_proba[2],
      },
  }

"""## **Codage de l'API**"""

name = 'martin'
print(f"Hello {name}!")

